if (isRelease) {
    apply plugin: 'com.android.library' // 正式环境  library不能独立运行
} else {
    apply plugin: 'com.android.application' // 测试环境 application独立运行
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def androidID = rootProject.ext.androidID
android {
    compileSdkVersion androidID.compileSdkVersion
    defaultConfig {
        multiDexEnabled true
        if (!isRelease) {  // 能够独立运行 必须要有appID
            applicationId appID.ui // 组件化模式能独立运行才能有applicationId
        }
        minSdkVersion androidID.minSdkVersion
        targetSdkVersion androidID.targetSdkVersion
        versionCode androidID.versionCode
        versionName androidID.versionName
        // 组件化 和 集成化
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (!isRelease) {
                // 如果是组件化模式，需要单独运行时 Debug
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                java.srcDirs += "src/main/debug/java/"
            } else { // 正式环境下
                // 集成化模式，整个项目打包apk
                manifest.srcFile 'src/main/AndroidManifest.xml'

                java {
                    // release 时 debug 目录下文件不需要合并到主工程
                    exclude "**/debug/**"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    if (isRelease) {
        //给模块设置不同的资源前缀，可以避免重复命名
        resourcePrefix "ui_"
    }
}

dependencies {
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.androidx_version"
    implementation 'com.google.android.material:material:1.1.0'

    implementation 'androidx.core:core-ktx:1.0.2'
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraint_layout_verson"

    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-7'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-7'//没有使用特殊Header，可以不加这行
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    implementation project(':common')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.kotlin_coroutines_version"

    annotationProcessor "com.google.auto.service:auto-service:$rootProject.ext.autoservice_version"
    implementation "com.google.auto.service:auto-service:$rootProject.ext.autoservice_version"
    kapt "com.google.auto.service:auto-service:$rootProject.ext.autoservice_version"
}