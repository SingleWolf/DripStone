apply plugin: 'com.android.application'

def androidID = rootProject.ext.androidID
android {
    signingConfigs {
        keySign {
            storeFile file('/Users/walker/开发/Android/DripStone/keystore/drip.jks')
            storePassword 'drip1234'
            keyAlias 'drip'
            keyPassword 'drip1234'
        }
    }
    compileSdkVersion androidID.compileSdkVersion
    defaultConfig {
        minSdkVersion androidID.minSdkVersion
        targetSdkVersion androidID.targetSdkVersion
        versionCode androidID.versionCode
        versionName androidID.versionName
        // 组件化 和 集成化
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
        consumerProguardFiles 'consumer-rules.pro'

        ndk {
            // 设置支持的SO库架构，第三方给的so库哪几种架构，就配置这几种架构
            abiFilters 'armeabi-v7a'
        }
        signingConfig signingConfigs.keySign
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}